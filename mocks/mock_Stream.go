// Code generated by MockGen. DO NOT EDIT.
// Source: ./datastreams/Stream.go

// Package mocks is a generated GoMock package.
package mocks

import (
	datastreams "github.com/delta/dalal-street-server/datastreams"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockManager is a mock of Manager interface
type MockManager struct {
	ctrl     *gomock.Controller
	recorder *MockManagerMockRecorder
}

// MockManagerMockRecorder is the mock recorder for MockManager
type MockManagerMockRecorder struct {
	mock *MockManager
}

// NewMockManager creates a new mock instance
func NewMockManager(ctrl *gomock.Controller) *MockManager {
	mock := &MockManager{ctrl: ctrl}
	mock.recorder = &MockManagerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockManager) EXPECT() *MockManagerMockRecorder {
	return m.recorder
}

// GetMarketDepthStream mocks base method
func (m *MockManager) GetMarketDepthStream(stockId uint32) datastreams.MarketDepthStream {
	ret := m.ctrl.Call(m, "GetMarketDepthStream", stockId)
	ret0, _ := ret[0].(datastreams.MarketDepthStream)
	return ret0
}

// GetMarketDepthStream indicates an expected call of GetMarketDepthStream
func (mr *MockManagerMockRecorder) GetMarketDepthStream(stockId interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMarketDepthStream", reflect.TypeOf((*MockManager)(nil).GetMarketDepthStream), stockId)
}

// GetMarketEventsStream mocks base method
func (m *MockManager) GetMarketEventsStream() datastreams.MarketEventsStream {
	ret := m.ctrl.Call(m, "GetMarketEventsStream")
	ret0, _ := ret[0].(datastreams.MarketEventsStream)
	return ret0
}

// GetMarketEventsStream indicates an expected call of GetMarketEventsStream
func (mr *MockManagerMockRecorder) GetMarketEventsStream() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMarketEventsStream", reflect.TypeOf((*MockManager)(nil).GetMarketEventsStream))
}

// GetMyOrdersStream mocks base method
func (m *MockManager) GetMyOrdersStream() datastreams.MyOrdersStream {
	ret := m.ctrl.Call(m, "GetMyOrdersStream")
	ret0, _ := ret[0].(datastreams.MyOrdersStream)
	return ret0
}

// GetMyOrdersStream indicates an expected call of GetMyOrdersStream
func (mr *MockManagerMockRecorder) GetMyOrdersStream() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMyOrdersStream", reflect.TypeOf((*MockManager)(nil).GetMyOrdersStream))
}

// GetNotificationsStream mocks base method
func (m *MockManager) GetNotificationsStream() datastreams.NotificationsStream {
	ret := m.ctrl.Call(m, "GetNotificationsStream")
	ret0, _ := ret[0].(datastreams.NotificationsStream)
	return ret0
}

// GetNotificationsStream indicates an expected call of GetNotificationsStream
func (mr *MockManagerMockRecorder) GetNotificationsStream() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetNotificationsStream", reflect.TypeOf((*MockManager)(nil).GetNotificationsStream))
}

// GetStockExchangeStream mocks base method
func (m *MockManager) GetStockExchangeStream() datastreams.StockExchangeStream {
	ret := m.ctrl.Call(m, "GetStockExchangeStream")
	ret0, _ := ret[0].(datastreams.StockExchangeStream)
	return ret0
}

// GetStockExchangeStream indicates an expected call of GetStockExchangeStream
func (mr *MockManagerMockRecorder) GetStockExchangeStream() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetStockExchangeStream", reflect.TypeOf((*MockManager)(nil).GetStockExchangeStream))
}

// GetStockPricesStream mocks base method
func (m *MockManager) GetStockPricesStream() datastreams.StockPricesStream {
	ret := m.ctrl.Call(m, "GetStockPricesStream")
	ret0, _ := ret[0].(datastreams.StockPricesStream)
	return ret0
}

// GetStockPricesStream indicates an expected call of GetStockPricesStream
func (mr *MockManagerMockRecorder) GetStockPricesStream() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetStockPricesStream", reflect.TypeOf((*MockManager)(nil).GetStockPricesStream))
}

// GetTransactionsStream mocks base method
func (m *MockManager) GetTransactionsStream() datastreams.TransactionsStream {
	ret := m.ctrl.Call(m, "GetTransactionsStream")
	ret0, _ := ret[0].(datastreams.TransactionsStream)
	return ret0
}

// GetTransactionsStream indicates an expected call of GetTransactionsStream
func (mr *MockManagerMockRecorder) GetTransactionsStream() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTransactionsStream", reflect.TypeOf((*MockManager)(nil).GetTransactionsStream))
}

// GetStockHistoryStream mocks base method
func (m *MockManager) GetStockHistoryStream(stockId uint32) datastreams.StockHistoryStream {
	ret := m.ctrl.Call(m, "GetStockHistoryStream", stockId)
	ret0, _ := ret[0].(datastreams.StockHistoryStream)
	return ret0
}

// GetStockHistoryStream indicates an expected call of GetStockHistoryStream
func (mr *MockManagerMockRecorder) GetStockHistoryStream(stockId interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetStockHistoryStream", reflect.TypeOf((*MockManager)(nil).GetStockHistoryStream), stockId)
}
